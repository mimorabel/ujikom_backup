generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  id        Int       @id @default(autoincrement())
  username  String    @unique
  email     String    @unique
  no_telp   String    @unique
  password  String
  role      Role

  pemilik   pemilik[]
  penyewa   penyewa[]
}

model pemilik {
  id       Int    @id @default(autoincrement())
  users_id Int
  NIK      String @unique
  alamat   String

  user     users  @relation(fields: [users_id], references: [id])
  motor    motor[]
  dokumen  dokumen[]
}

model penyewa {
  id       Int    @id @default(autoincrement())
  users_id Int
  NIK      String @unique
  alamat   String

  user       users       @relation(fields: [users_id], references: [id])
  penyewaan  penyewaan[]
}

model merk {
  id    Int    @id @default(autoincrement())
  nama  String
  kode  String @db.Char(5)

  motor motor[]
}

model jenis {
  id       Int    @id @default(autoincrement())
  tipe_cc  String @db.VarChar(10)
  kategori String @db.VarChar(20)

  motor    motor[]
}

model motor {
  id         Int      @id @default(autoincrement())
  kode_motor String   @unique
  pemilik_id Int
  merk_motor Int
  jenis_motor Int
  no_plat    String   @unique
  status     Status   @default(ready)
  photo      String

  pemilik    pemilik  @relation(fields: [pemilik_id], references: [id])
  merk       merk     @relation(fields: [merk_motor], references: [id])
  jenis      jenis    @relation(fields: [jenis_motor], references: [id])
  dokumen    dokumen[]
  tarif      tarif[]
  penyewaan  penyewaan[]
}

model dokumen {
  id            Int      @id @default(autoincrement())
  kode_dokumen  String   @unique
  pemilik_id    Int
  motor_id      Int
  no_reg        String
  tahun_prod    Int      @db.Year
  jenis_dokumen JenisDokumen
  seri          String?

  pemilik pemilik @relation(fields: [pemilik_id], references: [id])
  motor   motor   @relation(fields: [motor_id], references: [id])
}

model tarif {
  id            Int     @id @default(autoincrement())
  motor_id      Int
  tarif_harian  Decimal? @db.Decimal(10,2)
  tarif_mingguan Decimal? @db.Decimal(10,2)
  tarif_bulanan Decimal? @db.Decimal(10,2)

  motor     motor     @relation(fields: [motor_id], references: [id])
  penyewaan penyewaan[]
}

model penyewaan {
  id              Int      @id @default(autoincrement())
  motor_id        Int
  penyewa_id      Int
  tanggal_mulai   DateTime @db.Date
  tanggal_selesai DateTime @db.Date
  tipe_tarif      Int
  total           Decimal  @db.Decimal(10,2)
  status          SewaStatus @default(pending)

  motor      motor    @relation(fields: [motor_id], references: [id])
  penyewa    penyewa  @relation(fields: [penyewa_id], references: [id])
  tarif      tarif    @relation(fields: [tipe_tarif], references: [id])
  transaksi  transaksi[]
}

model transaksi {
  id              Int       @id @default(autoincrement())
  motor           Motor     @relation(fields: [motorId], references: [id])
  motorId         Int
  penyewa         Penyewa   @relation(fields: [penyewaId], references: [id])
  penyewaId       Int
  tanggalMulai    DateTime
  tanggalSelesai  DateTime
  totalHarga      Int
  status          String    @default("pending") // pending, selesai, batal
  invoice         Invoice?
}

model Invoice {
  id              Int         @id @default(autoincrement())
  transaksi       Transaksi   @relation(fields: [transaksiId], references: [id])
  transaksiId     Int
  nomorInvoice    String      @unique
  tanggalInvoice  DateTime    @default(now())
  totalHarga      Int
  pemilikShare    Int
  adminShare      Int
}


enum Role {
  Pemilik
  Penyewa
}

enum Status {
  ready
  maintenance
  on_rent
}

enum JenisDokumen {
  STNK
  BPKB
}

enum SewaStatus {
  pending
  diterima
}

enum TransaksiStatus {
  lunas
  menunggak
}
